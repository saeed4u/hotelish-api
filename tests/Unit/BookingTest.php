<?php
/**
 * Created by PhpStorm.
 * User: brasaeed
 * Date: 2019-06-29
 * Time: 15:44
 */

namespace Tests\Unit;


use App\Booking;
use App\Room;
use App\Service\BookingService;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class BookingTest extends TestCase
{
    /**
     * @var Booking $bookingTruthTest
     */
    private $bookingTruthTest;


    /**
     * @var BookingService $bookingService
     */
    private $bookingService;

    protected function setUp()
    {
        parent::setUp();
        $this->bookingService = $this->app->make(BookingService::class);
    }

    protected function tearDown()
    {
        DB::table('bookings')->truncate();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testBookingCreationExpectSuccess(){
        $payload = $this->getBookingArray();
        /**
         * @var JsonResponse $result
         */
        $result = $this->bookingService->addBooking($payload);
        self::assertEquals(200,$result->status());
    }

    public function testBookingCreationExpectFailure(){
        $payload = $this->getBookingArray();
        /**
         * @var JsonResponse $result
         */
        $result = $this->bookingService->addBooking($payload);
        self::assertEquals(200,$result->status());

        $payload = $this->getBookingArray();
        $payload['end_date'] = now()->subWeek(2);

        $result = $this->bookingService->addBooking($payload);
        self::assertEquals(400,$result->status());
    }

    public function testBookingCreationExpectOverlapFailure(){
        $payload = $this->getBookingArray();
        /**
         * @var JsonResponse $result
         */
        $result = $this->bookingService->addBooking($payload);
        self::assertEquals(200,$result->status());

        $payload = $this->getBookingArray();
        $result = $this->bookingService->addBooking($payload);
        self::assertEquals(403,$result->status());
    }

    private function getBookingArray(){
        $booking = new Booking();
        $booking->start_date = now()->addDays(2)->toDateString();
        $booking->end_date = now()->addWeek(1)->toDateString();
        $booking->name = 'saeed issah';
        $booking->email = 'saeed@codeline.com';
        $booking->room_id = 2;
        return $booking->toArray();
    }

}